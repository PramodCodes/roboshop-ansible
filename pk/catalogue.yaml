- name: setting up catalogue
  hosts: catalogue
  become: yes
  tasks:
# disable and enable in ansible
#- name: disable node js module
#  ansible.builtin.dnf:
#    name: nodejs
#    state: absent
#- name: enable dnf modules
#  ansible.builtin.dnf:
#    name: nodejs:18
#    state: present
  - name: disable and enable nodejs module
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y
      # ansible.builtin.command: will not be able to parse the command in the first place


#    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

  - name: Install NodeJS
    ansible.builtin.dnf:
      name: nodejs
      state: present
  - name: add roboshop user
    ansible.builtin.user:
      name: roboshop
  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /app
      state: directory # if you dont specify as directory it will be treated as file
#      mode: '0755'
      #why ansible.builtin.file:  has mode: of 4 characters not 3 ?
  - name: Download catalogue
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp
  - name: Extract archive
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes
#Lets download the dependencies.
  - name: install dependencies
    ansible.builtin.command:
      chdir: /app
      cmd: npm install
#the following block works as same block as above read notes
#  - name: Install dependencies
#    ansible.builtin.command: npm install
#    args:
#      chdir: /app

#Setup SystemD Catalogue Service
  - name: copy catalogue service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
#Load the service.
  - name: reload deamon and restart
    ansible.builtin.systemd_service:
      daemon_reload: true
  # lets start catalogue service after the data is loaded because without data it will throw exceptions
#so moving the below block to end for start and enable catalogue service

#  - name: start and enable catalogue
#    ansible.builtin.service:
#      name: catalogue
#      state: started #starting a service
#      enabled: yes # enabling a service
#We need to load the schema. To load schema we need to install mongodb client.
#To have it installed we can setup MongoDB repo and install mongodb-client

  - name: copy mongodb repo
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: Install mongodb client
    ansible.builtin.dnf:
      name: mongodb-org-shell
      state: present
# you cannot load same data twice you will get duplicate keys error

#check if data is loaded or not
  - name: get the categories count
    ansible.builtin.command:  mongo --host mongodb.pka.in.net --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
    register: product_count

  - name: print the count
    ansible.builtin.debug:
      msg: "product count: {{product_count}}"

  - name: load catalogue data
    ansible.builtin.command: mongo --host mongodb.pka.in.net </app/schema/catalogue.js


#  - name: start and enable catalogue
#    ansible.builtin.service:
#      name: catalogue
#      state: started #starting a service
#      enabled: yes # enabling a service
