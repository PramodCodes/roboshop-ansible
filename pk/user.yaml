- name: setting up user
  hosts: user
  become: yes
  tasks:
  - name: disable and enable nodejs module
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y


  - name: Install NodeJS
    ansible.builtin.dnf:
      name: nodejs
      state: present

  - name: add roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: remove directory if exists to avoid issues
    ansible.builtin.file:
      path: /app
      state: absent

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download user
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp

  - name: Extract archive
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /app
      remote_src: yes

#Lets download the dependencies.
  - name: install dependencies
    ansible.builtin.command:
      chdir: /app
      cmd: npm install

#Setup SystemD user Service
  - name: copy User service
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service

#Load the service.
  - name: reload deamon and restart
    ansible.builtin.systemd_service:
      daemon_reload: true
# lets start user service after the data is loaded because without data it will throw exceptions
#so moving the below block to end for start and enable user service


  - name: copy mongodb repo
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: Install mongodb client
    ansible.builtin.dnf:
      name: mongodb-org-shell
      state: present
# you cannot load same data twice you will get duplicate keys error

#check if data is loaded or not
  - name: get the categories count
    ansible.builtin.command:  mongo --host mongodb.pka.in.net --quiet --eval 'db = db.getSiblingDB("users"); db.users.count()'
    register: users_count

  - name: print the count to check if users exist
    ansible.builtin.debug:
      msg: "users count: {{users_count}}"

  - name: load user data
    ansible.builtin.command: mongo --host mongodb.pka.in.net < /app/schema/user.js
    # the below will check the data in db and only loads when count is 0
    when: users_count.stdout == "0" # keep double quotes because its not number but string


  - name: start and enable user
    ansible.builtin.service:
      name: user
      enabled: yes # enabling a service
      state: restarted #restarting a service instead of starting a service
