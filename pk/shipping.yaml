- name: setting up shipping
  hosts: shipping
  become: yes
  vars:
    mysql_password: RoboShop@1
  tasks:
  - name: install maven
    ansible.builtin.dnf:
      name: maven
      state: present

  - name: add roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: remove directory if exists to avoid issues
    ansible.builtin.file:
      path: /app
      state: absent

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download shipping
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /tmp

  - name: Extract archive
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: install maven dependencies
    ansible.builtin.command:
      chdir: /app
      cmd: mvn clean package

  - name: change the direcoty of jar
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar

  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: reload shipping deamon
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: install mysql client
    ansible.builtin.dnf:
      name: mysql
      state: present

# check data if loaded properly 48:00
  - name: check cities schema exists or not
    ansible.builtin.command:  mysql -h mysql.daws76s.online -uroot -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
    register: schema

  - name: print schema output
    ansible.builtin.debug:
      msg: "schema output: {{schema}}"

  - name: load cities data
    ansible.builtin.shell: "mysql -h mysql.daws76s.online -uroot -p{{mysql_password}}  < /app/schema/shipping.sql"
    when: schema.stdout != "1"

  - name: start and enable shipping
  ansible.builtin.service:
    name: shipping
    state: restarted
    enabled: yes